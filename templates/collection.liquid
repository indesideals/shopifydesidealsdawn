{% comment %}
  Modern Collection Page Template
  Features: filtering, sorting, modern product cards, pagination
{% endcomment %}

<div class="collection-page">
  <!-- Collection Hero -->
  <div class="collection-hero">
    <div class="container">
      <div class="collection-hero-content">
        <h1 class="collection-title">Shop All Products</h1>
        {% if collection.description %}
          <p class="collection-description">{{ collection.description }}</p>
        {% endif %}
        <div class="collection-stats">
          <span class="product-count">{{ collection.products_count }} products</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Filters and Sorting -->
  <div class="collection-toolbar">
    <div class="container">
      <div class="toolbar-content">
        <!-- Sort Options -->
        <div class="sort-section">
          <label for="sort-by" class="sort-label">Sort by:</label>
          <select id="sort-by" class="sort-select" onchange="window.location.href=this.value;">
            <option value="{{ collection.url }}?sort_by=manual" {% if collection.sort_by == 'manual' %}selected{% endif %}>Featured</option>
            <option value="{{ collection.url }}?sort_by=best-selling" {% if collection.sort_by == 'best-selling' %}selected{% endif %}>Best Selling</option>
            <option value="{{ collection.url }}?sort_by=title-ascending" {% if collection.sort_by == 'title-ascending' %}selected{% endif %}>Alphabetically, A-Z</option>
            <option value="{{ collection.url }}?sort_by=title-descending" {% if collection.sort_by == 'title-descending' %}selected{% endif %}>Alphabetically, Z-A</option>
            <option value="{{ collection.url }}?sort_by=price-ascending" {% if collection.sort_by == 'price-ascending' %}selected{% endif %}>Price, low to high</option>
            <option value="{{ collection.url }}?sort_by=price-descending" {% if collection.sort_by == 'price-descending' %}selected{% endif %}>Price, high to low</option>
            <option value="{{ collection.url }}?sort_by=created-ascending" {% if collection.sort_by == 'created-ascending' %}selected{% endif %}>Date, old to new</option>
            <option value="{{ collection.url }}?sort_by=created-descending" {% if collection.sort_by == 'created-descending' %}selected{% endif %}>Date, new to old</option>
          </select>
        </div>

        <!-- View Toggle -->
        <div class="view-toggle">
          <button class="view-btn active" data-view="grid" aria-label="Grid view">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
              <rect x="2" y="2" width="6" height="6" rx="1"/>
              <rect x="12" y="2" width="6" height="6" rx="1"/>
              <rect x="2" y="12" width="6" height="6" rx="1"/>
              <rect x="12" y="12" width="6" height="6" rx="1"/>
            </svg>
          </button>
          <button class="view-btn" data-view="list" aria-label="List view">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
              <rect x="2" y="2" width="16" height="3" rx="1"/>
              <rect x="2" y="8" width="16" height="3" rx="1"/>
              <rect x="2" y="14" width="16" height="3" rx="1"/>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Products Grid -->
  <div class="collection-content">
    <div class="container">
      {% paginate collection.products by 12 %}
        <div class="products-grid" id="products-grid">
          {% for product in collection.products %}
            <div class="product-card" data-product-id="{{ product.id }}">
              <!-- Product Image -->
              <div class="product-image">
                {% if product.featured_image %}
                  <img src="{{ product.featured_image | img_url: '400x400', crop: 'center' }}" 
                       alt="{{ product.title }}" 
                       loading="lazy"
                       class="product-img">
                {% else %}
                  <div class="product-placeholder">
                    <svg width="60" height="60" viewBox="0 0 60 60" fill="currentColor">
                      <path d="M30 5C16.2 5 5 16.2 5 30s11.2 25 25 25 25-11.2 25-25S43.8 5 30 5zm0 45C18.4 50 10 41.6 10 30S18.4 10 30 10s20 8.4 20 20-8.4 20-20 20z"/>
                      <path d="M30 15c-8.3 0-15 6.7-15 15s6.7 15 15 15 15-6.7 15-15-6.7-15-15-15zm0 25c-5.5 0-10-4.5-10-10s4.5-10 10-10 10 4.5 10 10-4.5 10-10 10z"/>
                    </svg>
                  </div>
                {% endif %}
                
                <!-- Quick Actions -->
                <div class="product-actions">
                  <button class="action-btn wishlist-btn favorite-btn" 
                          onclick="addToWishlist('{{ product.id }}', '{{ product.title | escape }}', '{{ product.price | money_without_currency }}', '{{ product.featured_image | img_url: '400x400' }}', '{{ product.url }}')" 
                          aria-label="Add to wishlist"
                          data-product-id="{{ product.id }}">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
                    </svg>
                  </button>
                  <button class="action-btn quick-view-btn" 
                          onclick="openQuickView('{{ product.id }}', '{{ product.title | escape }}', '{{ product.price | money_without_currency }}', '{{ product.featured_image | img_url: '400x400' }}', '{{ product.url }}', '{{ product.description | strip_html | truncate: 100 }}')" 
                          aria-label="Quick view"
                          data-product-id="{{ product.id }}">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
                      <circle cx="12" cy="12" r="3"/>
                    </svg>
                  </button>
                </div>

                <!-- Sale Badge -->
                {% if product.compare_at_price > product.price %}
                  <div class="sale-badge">
                    <span>40% OFF</span>
                  </div>
                {% endif %}
              </div>

              <!-- Product Info -->
              <div class="product-info">
                <h3 class="product-title">
                  {{ product.title }}
                </h3>
                
                <!-- Product Rating -->
                {% render 'product-data', product: product %}
                <div class="product-rating">
                  <div class="stars">
                    {% render 'star-rating', rating: product_rating %}
                  </div>
                  <span class="rating-text">{{ product_rating }} stars</span>
                  <span class="reviews-text">({{ product_review_count }} reviews)</span>
                </div>
                
                <!-- Product Price -->
                <div class="product-price">
                  {% assign selling_price = product.price %}
                  {% assign compare_price = selling_price | times: 1.4 | round %}
                  {% assign compare_price_rounded = compare_price | divided_by: 10 | times: 10 | plus: 9 %}
                  <span class="original-price">{% render 'money-format', amount: compare_price_rounded %}</span>
                  <span class="sale-price">{% render 'money-format', amount: selling_price %}</span>
                  <span class="discount-pill">40% OFF</span>
                </div>

                <!-- Add to Cart Button - LOCALSTORAGE SOLUTION -->
                <button type="button" class="add-to-cart-btn" 
                        onclick="addToCartDirect('{{ product.id }}', '{{ product.selected_or_first_available_variant.id }}', '{{ product.title | escape }}', '{{ product.price | divided_by: 100.0 }}', '{{ product.featured_image | image_url: width: 300 }}', '{{ product.url }}')"
                        data-product-id="{{ product.selected_or_first_available_variant.id }}">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" class="cart-icon">
                    <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
                  </svg>
                  Add to Cart
                </button>
              </div>
              
              <!-- Clickable Overlay for PDP -->
              <a href="{{ product.url }}" class="product-card-overlay" aria-label="View {{ product.title }} details"></a>
            </div>
          {% endfor %}
        </div>

        <!-- Pagination -->
        {% if paginate.pages > 1 %}
          <div class="pagination">
            {% if paginate.previous %}
              <a href="{{ paginate.previous.url }}" class="pagination-btn prev">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                  <path d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/>
                </svg>
                Previous
              </a>
            {% endif %}

            <div class="pagination-numbers">
              {% for part in paginate.parts %}
                {% if part.is_link %}
                  <a href="{{ part.url }}" class="pagination-number">{{ part.title }}</a>
                {% else %}
                  {% if part.title == paginate.current_page %}
                    <span class="pagination-number active">{{ part.title }}</span>
                  {% else %}
                    <span class="pagination-number">{{ part.title }}</span>
                  {% endif %}
                {% endif %}
              {% endfor %}
            </div>

            {% if paginate.next %}
              <a href="{{ paginate.next.url }}" class="pagination-btn next">
                Next
                <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                  <path d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
                </svg>
              </a>
            {% endif %}
          </div>
        {% endif %}
      {% endpaginate %}
    </div>
  </div>
</div>

<!-- Quick View Modal -->
<div id="quick-view-modal" class="quick-view-modal">
  <div class="quick-view-overlay" onclick="closeQuickView()"></div>
  <div class="quick-view-content">
    <button class="quick-view-close" onclick="closeQuickView()">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M18 6L6 18M6 6l12 12"/>
      </svg>
    </button>
    
    <div class="quick-view-body">
      <div class="quick-view-image">
        <img id="quick-view-img" src="" alt="" class="product-img">
      </div>
      
      <div class="quick-view-details">
        <h2 id="quick-view-title" class="quick-view-title"></h2>
        <p id="quick-view-description" class="quick-view-description"></p>
        
        <div class="quick-view-price">
          <span id="quick-view-price" class="price"></span>
        </div>
        
        <div class="quick-view-actions">
          <button class="quick-view-wishlist-btn" onclick="addToWishlistFromQuickView()">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
            </svg>
            Add to Wishlist
          </button>
          
          <button class="quick-view-cart-btn" onclick="addToCartFromQuickView()" type="button">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m0 0h9m-9 0a2 2 0 100 4 2 2 0 000-4zm9 0a2 2 0 100 4 2 2 0 000-4z"/>
            </svg>
            Add to Cart
          </button>
        </div>
        
        <a href="" id="quick-view-link" class="quick-view-link">View Full Details</a>
      </div>
    </div>
  </div>
</div>

<style>
.collection-page {
  background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%);
  min-height: 100vh;
}

/* Collection Hero */
.collection-hero {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  padding: 3rem 0;
  text-align: center;
  position: relative;
  overflow: hidden;
}

.collection-hero::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  opacity: 0.3;
}

.collection-hero-content {
  position: relative;
  z-index: 2;
}

.collection-title {
  font-size: 2.5rem;
  font-weight: 800;
  margin-bottom: 1rem;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.collection-description {
  font-size: 1.1rem;
  color: rgba(255, 255, 255, 0.95);
  max-width: 600px;
  margin: 0 auto 1rem;
  line-height: 1.6;
}

.collection-stats {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.9);
  font-weight: 600;
  background: rgba(255, 255, 255, 0.2);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  display: inline-block;
  backdrop-filter: blur(10px);
}

/* Toolbar */
.collection-toolbar {
  background: white;
  border-bottom: 1px solid #e5e7eb;
  padding: 1rem 0;
  position: sticky;
  top: 0;
  z-index: 10;
}

.toolbar-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 1rem;
}

.sort-section {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.sort-label {
  font-weight: 600;
  color: #374151;
  font-size: 0.9rem;
}

.sort-select {
  padding: 0.5rem 1rem;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  background: white;
  font-size: 0.9rem;
  cursor: pointer;
  transition: border-color 0.3s ease;
}

.sort-select:focus {
  outline: none;
  border-color: #6366f1;
}

.view-toggle {
  display: flex;
  gap: 0.5rem;
}

.view-btn {
  padding: 0.5rem;
  border: 2px solid #e5e7eb;
  background: white;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
  color: #6b7280;
}

.view-btn:hover,
.view-btn.active {
  border-color: #6366f1;
  color: #6366f1;
  background: rgba(99, 102, 241, 0.05);
}

/* Products Grid */
.collection-content {
  padding: 2rem 0;
}

.products-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 2rem;
  margin-bottom: 3rem;
  align-items: stretch;
}

.products-grid.list-view {
  grid-template-columns: 1fr;
}

.products-grid.list-view .product-card {
  display: grid;
  grid-template-columns: 200px 1fr auto;
  gap: 1.5rem;
  align-items: start;
}

.products-grid.list-view .product-image {
  height: 150px;
}

.products-grid.list-view .product-info {
  padding: 0;
}

.products-grid.list-view .add-to-cart-btn {
  width: auto;
  padding: 0.75rem 1.5rem;
}

/* Product Card */
.product-card {
  background: white;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
}

.product-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
}

/* Clickable Overlay for Product Card */
.product-card-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  cursor: pointer;
  background: transparent;
  transition: background-color 0.3s ease;
}

.product-card-overlay:hover {
  background: rgba(99, 102, 241, 0.05);
}

/* Ensure action buttons and add to cart button are above overlay */
.product-actions,
.add-to-cart-btn {
  position: relative;
  z-index: 2;
}

.product-image {
  position: relative;
  height: 250px;
  overflow: hidden;
}

.product-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.product-card:hover .product-img {
  transform: scale(1.05);
}

.product-placeholder {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  background: #f9fafb;
  color: #9ca3af;
}

.product-link {
  display: block;
  height: 100%;
}

/* Product Actions */
.product-actions {
  position: absolute;
  top: 1rem;
  right: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  opacity: 0.5;
  transition: all 0.3s ease;
}

.product-card:hover .product-actions {
  opacity: 1;
}

.action-btn {
  width: 40px;
  height: 40px;
  border: none;
  border-radius: 50%;
  background: white;
  color: #374151;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.action-btn:hover {
  background: var(--color-gradient-primary);
  color: white;
  transform: scale(1.1);
}

/* Wishlist button specific styles */
.wishlist-btn.active {
  background: var(--color-gradient-primary);
  color: white;
}

.wishlist-btn.active svg {
  fill: white !important;
  stroke: white !important;
}

.wishlist-btn:hover {
  background: var(--color-gradient-primary);
  color: white;
  transform: scale(1.1);
}

/* Quick view button specific styles */
.quick-view-btn:hover {
  background: var(--color-gradient-secondary);
  color: white;
  transform: scale(1.1);
}

/* Sale Badge */
.sale-badge {
  position: absolute;
  top: 0.75rem;
  left: 0.75rem;
  background: #dc2626;
  color: white;
  padding: 0.25rem 0.6rem;
  border-radius: 999px;
  font-size: 0.72rem;
  font-weight: 700;
  box-shadow: 0 6px 14px rgba(220, 38, 38, 0.25);
}

/* Inline discount pill for list/grid info area */
.discount-pill {
  display: inline-block;
  background: #dc2626;
  color: #fff;
  padding: 0.15rem 0.5rem;
  border-radius: 999px;
  font-size: 0.72rem;
  font-weight: 700;
  line-height: 1;
}

/* Product Info */
.product-info {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  justify-content: space-between;
}

.product-title {
  margin: 0 0 0.5rem 0;
  font-size: 1.1rem;
  font-weight: 600;
  min-height: 2.4rem;
  display: flex;
  align-items: flex-start;
  color: #1f2937;
  line-height: 1.2;
}

/* Product Rating */
.product-rating {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
  flex-wrap: nowrap;
  min-height: 1.5rem;
}

.stars {
  display: flex;
  gap: 0.125rem;
  flex-shrink: 0;
}

.star {
  color: #fbbf24;
  font-size: 0.875rem;
}

.star.empty {
  color: #e5e7eb;
}

.rating-text {
  font-size: 0.8rem;
  color: #6b7280;
  white-space: nowrap;
}

.reviews-text {
  font-size: 0.8rem;
  color: #6b7280;
  white-space: nowrap;
}

/* Product Price */
.product-price {
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: wrap;
  min-height: 2rem;
}

.original-price {
  text-decoration: line-through;
  color: #9ca3af;
  font-size: 0.9rem;
}

.sale-price,
.current-price {
  font-weight: 700;
  color: #667eea;
  font-size: 1.1rem;
}

/* Add to Cart Button */
.add-to-cart-btn {
  width: 100%;
  padding: 0.75rem 1rem;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin-top: auto;
}

.add-to-cart-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
}

.cart-icon {
  flex-shrink: 0;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-top: 3rem;
  flex-wrap: wrap;
}

.pagination-btn {
  padding: 0.75rem 1rem;
  border: 2px solid #e5e7eb;
  background: white;
  color: #374151;
  text-decoration: none;
  border-radius: 8px;
  font-weight: 600;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.pagination-btn:hover {
  border-color: #667eea;
  color: #667eea;
  background: rgba(102, 126, 234, 0.05);
}

.pagination-numbers {
  display: flex;
  gap: 0.5rem;
}

.pagination-number {
  padding: 0.75rem 1rem;
  border: 2px solid #e5e7eb;
  background: white;
  color: #374151;
  text-decoration: none;
  border-radius: 8px;
  font-weight: 600;
  transition: all 0.3s ease;
  min-width: 44px;
  text-align: center;
}

.pagination-number:hover,
.pagination-number.active {
  border-color: #667eea;
  color: #667eea;
  background: rgba(102, 126, 234, 0.05);
}

/* Responsive Design */
@media (max-width: 768px) {
  .collection-title {
    font-size: 2rem;
    color: white;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  .collection-stats {
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.9);
  }
  
  .toolbar-content {
    flex-direction: column;
    align-items: stretch;
  }
  
  .sort-section {
    justify-content: space-between;
  }
  
  .products-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1rem;
  }
  
  .products-grid.list-view .product-card {
    grid-template-columns: 1fr;
    text-align: center;
  }
  
  .products-grid.list-view .product-image {
    height: 200px;
  }
}

@media (max-width: 480px) {
  .collection-hero {
    padding: 2rem 0;
  }
  
  .collection-content {
    padding: 1rem 0;
  }
  
  .products-grid {
    grid-template-columns: 1fr;
  }
  
  .pagination {
    flex-direction: column;
    gap: 0.5rem;
  }
}

/* Quick View Modal Styles */
.quick-view-modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10000;
}

.quick-view-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
}

.quick-view-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: white;
  border-radius: 16px;
  max-width: 800px;
  width: 90%;
  max-height: 90vh;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
}

.quick-view-close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 40px;
  height: 40px;
  border: none;
  background: white;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  z-index: 10;
  transition: all 0.3s ease;
}

.quick-view-close:hover {
  background: #ef4444;
  color: white;
  transform: scale(1.1);
}

.quick-view-body {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  padding: 2rem;
}

.quick-view-image {
  text-align: center;
}

.quick-view-image img {
  max-width: 100%;
  height: auto;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.quick-view-details {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.quick-view-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: #1f2937;
  margin: 0;
  line-height: 1.3;
}

.quick-view-description {
  color: #6b7280;
  line-height: 1.6;
  margin: 0;
}

.quick-view-price {
  font-size: 1.5rem;
  font-weight: 700;
  color: #667eea;
}

.quick-view-actions {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
}

.quick-view-wishlist-btn,
.quick-view-cart-btn {
  flex: 1;
  padding: 0.75rem 1rem;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.quick-view-wishlist-btn {
  background: #f3f4f6;
  color: #374151;
  border: 2px solid #e5e7eb;
}

.quick-view-wishlist-btn:hover {
  background: #ef4444;
  color: white;
  border-color: #ef4444;
  transform: translateY(-2px);
}

.quick-view-cart-btn {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
}

.quick-view-cart-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
}

.quick-view-link {
  text-align: center;
  color: #667eea;
  text-decoration: none;
  font-weight: 600;
  padding: 0.75rem;
  border: 2px solid #667eea;
  border-radius: 8px;
  transition: all 0.3s ease;
  margin-top: 1rem;
}

.quick-view-link:hover {
  background: #667eea;
  color: white;
  transform: translateY(-2px);
}

/* Responsive Quick View */
@media (max-width: 768px) {
  .quick-view-content {
    width: 90%;
    max-height: 80vh;
    top: 10%;
    transform: translateX(-50%);
    border-radius: 16px;
  }
  
  .quick-view-body {
    grid-template-columns: 1fr;
    gap: 0.5rem;
    padding: 1rem;
  }
  
  .quick-view-image img {
    max-height: 150px;
    width: auto;
  }
  
  .quick-view-title {
    font-size: 1rem;
    line-height: 1.2;
    margin-bottom: 0.25rem;
  }
  
  .quick-view-description {
    font-size: 0.8rem;
    line-height: 1.3;
    margin-bottom: 0.5rem;
  }
  
  .quick-view-price {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
  }
  
  .quick-view-actions {
    flex-direction: column;
    gap: 0.4rem;
  }
  
  .quick-view-wishlist-btn,
  .quick-view-cart-btn {
    padding: 0.5rem 0.7rem;
    font-size: 0.8rem;
  }
  
  .quick-view-link {
    padding: 0.5rem 0.7rem;
    font-size: 0.8rem;
  }
  
  .quick-view-close {
    width: 30px;
    height: 30px;
    top: 0.5rem;
    right: 0.5rem;
  }
}

@media (max-width: 480px) {
  .quick-view-content {
    width: 85%;
    max-height: 75vh;
    top: 12.5%;
    transform: translateX(-50%);
    border-radius: 12px;
  }
  
  .quick-view-body {
    padding: 0.75rem;
    gap: 0.4rem;
  }
  
  .quick-view-image img {
    max-height: 120px;
  }
  
  .quick-view-title {
    font-size: 0.9rem;
    margin-bottom: 0.2rem;
  }
  
  .quick-view-description {
    font-size: 0.75rem;
    margin-bottom: 0.4rem;
  }
  
  .quick-view-price {
    font-size: 1rem;
    margin-bottom: 0.4rem;
  }
  
  .quick-view-wishlist-btn,
  .quick-view-cart-btn,
  .quick-view-link {
    padding: 0.4rem 0.6rem;
    font-size: 0.75rem;
  }
  
  .quick-view-close {
    width: 25px;
    height: 25px;
    top: 0.4rem;
    right: 0.4rem;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize wishlist system
  initWishlistSystem();
  
  // View toggle functionality
  const viewBtns = document.querySelectorAll('.view-btn');
  const productsGrid = document.getElementById('products-grid');
  
  viewBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const view = this.dataset.view;
      
      // Update active button
      viewBtns.forEach(b => b.classList.remove('active'));
      this.classList.add('active');
      
      // Update grid view
      productsGrid.className = view === 'list' ? 'products-grid list-view' : 'products-grid';
    });
  });
  
  // Add to cart functionality - DISABLED TO PREVENT 429 ERRORS
  // Using native form submission instead of JavaScript event listeners
  // const addToCartBtns = document.querySelectorAll('.add-to-cart-btn');
  
  // addToCartBtns.forEach(btn => {
  //   btn.addEventListener('click', function() {
  //     const productId = this.dataset.productId;
  //     const originalText = this.innerHTML;
      
  //     // Show loading state
  //     this.innerHTML = '<svg class="animate-spin" width="16" height="16" viewBox="0 0 16 16" fill="currentColor"><path d="M8 1a7 7 0 0 1 7 7v1.5a.5.5 0 0 1-1 0V8a6 6 0 0 0-6-6H6.5a.5.5 0 0 1 0-1H8z"/></svg> Adding...';
  //     this.disabled = true;
      
  //     // Simulate add to cart (replace with actual cart API call)
  //     setTimeout(() => {
  //       this.innerHTML = '✓ Added!';
  //       this.style.background = '#10b981';
        
  //       setTimeout(() => {
  //         this.innerHTML = originalText;
  //         this.style.background = '';
  //         this.disabled = false;
  //       }, 2000);
  //     }, 1000);
  //   });
  // });
});

// Wishlist functionality with seamless app integration
function addToWishlist(productId, title, price, image, url) {
  {% if customer %}
    if (window.wishlistAppInstalled) {
      toggleWishlistViaApp(productId, title, price, image, url);
    } else {
      toggleWishlistViaStorage(productId, title, price, image, url);
    }
  {% else %}
    // Redirect to login page with return URL
    window.location.href = '/account?return_url=' + encodeURIComponent(window.location.pathname);
  {% endif %}
}

function toggleWishlistViaApp(productId, title, price, image, url) {
  // Check if product is already in wishlist
  const isInWishlist = checkIfInWishlist(productId);
  
  if (isInWishlist) {
    // Remove from wishlist
    if (window.wishlistApp && window.wishlistApp.removeFromWishlist) {
      window.wishlistApp.removeFromWishlist(productId);
    }
    showNotification('Product removed from wishlist!', 'info');
    updateWishlistButton(productId, false);
  } else {
    // Add to wishlist
    if (window.wishlistApp && window.wishlistApp.addToWishlist) {
      window.wishlistApp.addToWishlist({
        id: productId,
        title: title,
        price: price,
        image: image,
        url: url
      });
    }
    showNotification('Product added to wishlist!', 'success');
    updateWishlistButton(productId, true);
  }
}

function toggleWishlistViaStorage(productId, title, price, image, url) {
  const customerId = '{{ customer.id }}';
  const wishlistKey = `wishlist_${customerId}`;
  let favorites = JSON.parse(localStorage.getItem(wishlistKey) || '[]');
  
  // Check if product is already in wishlist
  const existingProductIndex = favorites.findIndex(product => product.id === productId);
  
  if (existingProductIndex !== -1) {
    // Remove from wishlist
    favorites.splice(existingProductIndex, 1);
    localStorage.setItem(wishlistKey, JSON.stringify(favorites));
    showNotification('Product removed from wishlist!', 'info');
    updateWishlistButton(productId, false);
  } else {
    // Add to wishlist
    favorites.push({
      id: productId,
      title: title,
      price: price,
      image: image,
      url: url
    });
    localStorage.setItem(wishlistKey, JSON.stringify(favorites));
    showNotification('Product added to wishlist!', 'success');
    updateWishlistButton(productId, true);
  }
  
  // Trigger wishlist count update
  if (typeof updateWishlistCount === 'function') {
    updateWishlistCount();
  }
  // Dispatch custom event for other listeners
  window.dispatchEvent(new CustomEvent('wishlist-updated'));
}

function checkIfInWishlist(productId) {
  {% if customer %}
    if (window.wishlistAppInstalled) {
      // Check via app API
      if (window.wishlistApp && window.wishlistApp.isInWishlist) {
        return window.wishlistApp.isInWishlist(productId);
      }
      return false;
    } else {
      // Check via localStorage
      const customerId = '{{ customer.id }}';
      const wishlistKey = `wishlist_${customerId}`;
      const favorites = JSON.parse(localStorage.getItem(wishlistKey) || '[]');
      return favorites.some(product => product.id === productId);
    }
  {% else %}
    return false;
  {% endif %}
}

function updateWishlistButton(productId, isInWishlist) {
  const button = document.querySelector(`[data-product-id="${productId}"]`);
  if (button) {
    if (isInWishlist) {
      button.classList.add('active');
      button.querySelector('svg').style.fill = '#ef4444';
    } else {
      button.classList.remove('active');
      button.querySelector('svg').style.fill = 'none';
    }
  }
}

function showNotification(message, type = 'info') {
  // Create notification element
  const notification = document.createElement('div');
  notification.className = `notification notification-${type}`;
  notification.textContent = message;
  
  // Style the notification
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6'};
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    font-weight: 600;
    z-index: 10000;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transform: translateX(100%);
    transition: transform 0.3s ease;
  `;
  
  document.body.appendChild(notification);
  
  // Animate in
  setTimeout(() => {
    notification.style.transform = 'translateX(0)';
  }, 100);
  
  // Remove after 3 seconds
  setTimeout(() => {
    notification.style.transform = 'translateX(100%)';
    setTimeout(() => {
      document.body.removeChild(notification);
    }, 300);
  }, 3000);
}

// Initialize wishlist system
function initWishlistSystem() {
  // Check if Wishlist Plus app is installed
  checkWishlistApp();
  
  // Set up event listeners
  setupWishlistEvents();
  
  // Initialize UI
  initializeWishlistUI();
}

function checkWishlistApp() {
  // Check for Wishlist Plus app presence
  const appScript = document.querySelector('script[src*="wishlist-plus"]');
  const appElement = document.querySelector('[data-wishlist-app]');
  
  if (appScript || appElement) {
    console.log('✅ Wishlist Plus app detected - using app functionality');
    window.wishlistAppInstalled = true;
  } else {
    console.log('⚠️ Wishlist Plus app not detected - using fallback');
    window.wishlistAppInstalled = false;
  }
}

function setupWishlistEvents() {
  // Listen for app installation
  window.addEventListener('wishlist-app-installed', function() {
    window.wishlistAppInstalled = true;
    updateWishlistButtons();
  });
  
  // Listen for customer login
  window.addEventListener('customer-login', function() {
    updateWishlistButtons();
  });
}

function initializeWishlistUI() {
  if (window.wishlistAppInstalled) {
    document.body.classList.add('wishlist-app-active');
  }
  updateWishlistButtons();
}

function updateWishlistButtons() {
  {% if customer %}
    // Get all wishlist buttons on the page
    const wishlistButtons = document.querySelectorAll('.wishlist-btn');
    
    wishlistButtons.forEach(button => {
      const productId = button.getAttribute('data-product-id');
      if (productId) {
        const isInWishlist = checkIfInWishlist(productId);
        updateWishlistButton(productId, isInWishlist);
      }
    });
  {% endif %}
}

// Quick View functionality
let currentQuickViewProduct = null;

function openQuickView(productId, title, price, image, url, description) {
  currentQuickViewProduct = {
    id: productId,
    title: title,
    price: price,
    image: image,
    url: url,
    description: description
  };
  
  // Populate modal content
  document.getElementById('quick-view-img').src = image;
  document.getElementById('quick-view-img').alt = title;
  document.getElementById('quick-view-title').textContent = title;
  document.getElementById('quick-view-description').textContent = description;
  document.getElementById('quick-view-price').textContent = '₹' + price;
  document.getElementById('quick-view-link').href = url;
  
  // Show modal
  document.getElementById('quick-view-modal').style.display = 'block';
  document.body.style.overflow = 'hidden';
}

function closeQuickView() {
  document.getElementById('quick-view-modal').style.display = 'none';
  document.body.style.overflow = 'auto';
  currentQuickViewProduct = null;
}

function addToWishlistFromQuickView() {
  if (currentQuickViewProduct) {
    addToWishlist(
      currentQuickViewProduct.id,
      currentQuickViewProduct.title,
      currentQuickViewProduct.price,
      currentQuickViewProduct.image,
      currentQuickViewProduct.url
    );
  }
}

function addToCartFromQuickView() {
  if (currentQuickViewProduct) {
    console.log('Adding to cart from quick view:', currentQuickViewProduct);
    
    // Use the local cart system
    const title = currentQuickViewProduct.title || 'Product';
    const price = currentQuickViewProduct.price || '0';
    const image = currentQuickViewProduct.image || '';
    const url = currentQuickViewProduct.url || '';
    
    addToCartDirect(currentQuickViewProduct.id, currentQuickViewProduct.id, title, price, image, url);
    
    // Close quick view
    closeQuickView();
  }
}

// Close modal when clicking outside
document.addEventListener('click', function(event) {
  const modal = document.getElementById('quick-view-modal');
  if (event.target === modal) {
    closeQuickView();
  }
});

// Close modal with Escape key
document.addEventListener('keydown', function(event) {
  if (event.key === 'Escape') {
    closeQuickView();
  }
});

// Local cart submission for collection
function addToCartFromCollection(variantId, productTitle) {
  console.log('Adding to local cart from collection:', { variantId, productTitle });
  
  // Use the local cart system
  addToCartDirect(variantId, variantId, productTitle, '0', '', '');
}
</script>


